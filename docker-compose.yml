services:
  datasource:
    image: mysql:8.3-oraclelinux8
    container_name: datasource
    restart: always
    environment:
      MYSQL_USER: 'rabbit'
      MYSQL_DATABASE: 'rabbit'
      MYSQL_PASSWORD: 'rabbit'
      MYSQL_ROOT_PASSWORD: 'rabbit'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - rabbit-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - rabbit-network
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - rabbit-network
  publisher:
    build:
      context: ./publisher
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
    depends_on:
      - rabbitmq
      - redis
    links:
      - redis
    ports:
      - "8081:8081"
    restart: on-failure
    networks:
      - rabbit-network
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - datasource
    ports:
      - "8080:8080"
    restart: on-failure
    networks:
      - rabbit-network
volumes:
  my-db:
  rabbitmq-data:
  redis_data:
networks:
  rabbit-network:
    driver: bridge